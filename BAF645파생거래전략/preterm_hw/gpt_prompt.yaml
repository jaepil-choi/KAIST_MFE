prompts:
  - id: prompt_1
    attempt: 1
    description: "Given markdown-style table of Hull's table 19.2, write Python code to create a DataFrame."
    prompt: |
      You're an expert in financial derivatives, especially in dynamic delta hedging using options and underlying stocks. 
      I'll give you an example table for delta hedging simulation. 

      Given this table, Make a python function that on each run generate whole different simulated path of stock price that follows random path. 

      For option pricing model, use plain Black Scholes option pricing model. 

      The function should therefore take all the necessary inputs for these movement/pricing model. Note that you should also take "week" as argument, which is delta hedging adjustment frequency. 

      However, price itself should have finer price movement steps. 

      For example, if it's 20 week delta hedging simulation, price should have 20*5 = steps that moves randomly. 

      I'll give you the sample output table below. 

      The final output of the main function should be pandas dataframe that looks just like the one below. 

      However, do not put whole process into a single function. Think in object oriented programming way and separate functions and modules whereever possible to make the code clear and concise. 

      | Week | Stock Price | Delta | Shares Purchased | Cost of Shares Purchased ($000) | Cumulative Cost Including Interest ($000) | Interest Cost ($000) |
      |------|-------------|-------|-------------------|----------------------------------|--------------------------------------------|-----------------------|
      | 0    | 49.00       | 0.522 | 52,200            | 2,557.8                          | 2,557.8                                    | 2.5                   |
      | 1    | 48.12       | 0.458 | (6,400)           | (308.0)                          | 2,252.3                                    | 2.2                   |
      | 2    | 47.37       | 0.400 | (5,800)           | (274.7)                          | 1,979.8                                    | 1.9                   |
      | 3    | 50.25       | 0.596 | 19,600            | 984.9                            | 2,966.6                                    | 2.9                   |
      | 4    | 51.75       | 0.693 | 9,700             | 502.0                            | 3,471.5                                    | 3.3                   |
      | 5    | 53.12       | 0.774 | 8,100             | 430.3                            | 3,905.1                                    | 3.8                   |
      | 6    | 53.00       | 0.771 | (300)             | (15.9)                           | 3,893.0                                    | 3.7                   |
      | 7    | 51.87       | 0.706 | (6,500)           | (337.2)                          | 3,559.5                                    | 3.4                   |
      | 8    | 51.38       | 0.674 | (3,200)           | (164.4)                          | 3,398.5                                    | 3.3                   |
      | 9    | 53.00       | 0.787 | 11,300            | 598.9                            | 4,000.7                                    | 3.8                   |
      | 10   | 49.88       | 0.550 | (23,700)          | (1,182.2)                        | 2,822.3                                    | 2.7                   |
      | 11   | 48.50       | 0.413 | (13,700)          | (664.4)                          | 2,160.6                                    | 2.1                   |
      | 12   | 49.88       | 0.542 | 12,900            | 643.5                            | 2,806.2                                    | 2.7                   |
      | 13   | 50.37       | 0.591 | 4,900             | 246.8                            | 3,055.7                                    | 2.9                   |
      | 14   | 52.13       | 0.768 | 17,700            | 922.7                            | 3,981.3                                    | 3.8                   |
      | 15   | 51.88       | 0.759 | (900)             | (46.7)                           | 3,938.4                                    | 3.8                   |
      | 16   | 52.87       | 0.865 | 10,600            | 560.4                            | 4,502.6                                    | 4.3                   |
      | 17   | 54.87       | 0.978 | 11,300            | 620.0                            | 5,126.9                                    | 4.9                   |
      | 18   | 54.62       | 0.990 | 1,200             | 65.5                             | 5,197.3                                    | 5.0                   |
      | 19   | 55.87       | 1.000 | 1,000             | 55.9                             | 5,258.2                                    | 5.1                   |
      | 20   | 57.25       | 1.000 | 0                 | 0.0                              | 5,263.3                                    | 5.1                   |

  - id: prompt_2
    attempt: 2
    description: "Following the previous prompt, add initial condition and fix wrong parts."
    prompt: |
      Here are the things that should be fixed:

      - simulate_price_path is very inefficient. It doesn't have to iterate over like that. 
      Also, the general structure is wrong. stock price simulator should only take n_steps, which is the total days. steps_per_week is unneccesary. 
      - Also, calculate delta is not looking right. Why is T <= 0 condition needed?
      - Let's add initial condition that 100,000 call options sold is the initial position. (So you have to change option_holding accordingly). Note that it's sold. 
      - in run_simulation, risk_free_rate is not being used. As you can see, interest cost column needs interest rate for interest cost calculation. 
  - id: prompt_3
    attempt: 3
    description: "Following the previous prompt, remove unnecessary params and add delta after hedge column for tracking. GPT however also fixed the problem not given in the prompt: Critical error in setting delta at (near) maturity, which previously assigned 1 or -1 for call/put only. (It didn't consider OTM/ATM/ITM)"
    prompt: |
      Good. Now it's better. 

      - Add column for each week, showing the delta after the hedge to see we are having near 0 delta every week. 
      - run_simulation's risk_free_rate is not being used. Because we are using risk_free_rate as interest rate here, that's not necessary. 
      - hedging_frequency is default to weekly and there will be no change. It's not needed either. 
      - Also, make main() return df. and remove if __name__ == '__main__' from the code. I'm running this on Jupyter notebook so I don't need that. 
  - id: prompt_4
    attempt: 4
    